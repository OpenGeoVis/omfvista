
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/load-surface.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_load-surface.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_load-surface.py:


Load Surface from XYZ File
--------------------------

Load a surface from a file of XYZ coordinates

.. GENERATED FROM PYTHON SOURCE LINES 7-14

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2
    import pandas as pd
    import omf
    import omfvista
    import pyvista as pv
    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 15-19

.. code-block:: default


    base_quaternary_df = pd.read_csv('../assets/mod_base_quaternary_300_nan.txt')
    print(base_quaternary_df.head())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

                 x             y   z
    0  633025.9964  5.821552e+06 NaN
    1  633325.9964  5.821552e+06 NaN
    2  633625.9964  5.821552e+06 NaN
    3  633925.9964  5.821552e+06 NaN
    4  634225.9964  5.821552e+06 NaN




.. GENERATED FROM PYTHON SOURCE LINES 20-21

Create a ``pyvista`` dataset out of the coordinates

.. GENERATED FROM PYTHON SOURCE LINES 21-29

.. code-block:: default

    x = base_quaternary_df['x'].values
    y = base_quaternary_df['y'].values
    z = np.zeros_like(x)
    # simply pass the numpy points to the PolyData constructor
    cloud = pv.PolyData(np.c_[x,y,z])
    # Add data values onto the mesh nodes
    cloud['my data'] = base_quaternary_df['z'].values








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Make a surface using the delaunay filter

.. GENERATED FROM PYTHON SOURCE LINES 31-34

.. code-block:: default

    surf = cloud.delaunay_2d()
    surf.plot()




.. image-sg:: /examples/images/sphx_glr_load-surface_001.png
   :alt: load surface
   :srcset: /examples/images/sphx_glr_load-surface_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 35-37

Now warp by a scalar to have a more realistic surface
Note the scaling factor that exagerates the surface

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default

    warped = surf.warp_by_scalar(factor=5.0)
    warped.plot()




.. image-sg:: /examples/images/sphx_glr_load-surface_002.png
   :alt: load surface
   :srcset: /examples/images/sphx_glr_load-surface_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 41-42

Create an OMF element that can be saved out

.. GENERATED FROM PYTHON SOURCE LINES 42-59

.. code-block:: default

    tris = warped.faces.reshape(surf.n_cells, 4)[:, 1:4]
    base_quaternary_omf = omf.SurfaceElement(
        name='My Surface',
        description='This is a decription of "My Surface"',
        geometry=omf.SurfaceGeometry(vertices=warped.points,
                                     triangles=tris),
        data=[
            omf.ScalarData(
                name='My awesome data',
                array=np.array(surf['my data']),
                location='vertices'
            ),
        ],

        )
    base_quaternary_omf.validate()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 60-61

Sanity check

.. GENERATED FROM PYTHON SOURCE LINES 61-62

.. code-block:: default

    omfvista.wrap(base_quaternary_omf).plot()



.. image-sg:: /examples/images/sphx_glr_load-surface_003.png
   :alt: load surface
   :srcset: /examples/images/sphx_glr_load-surface_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.746 seconds)


.. _sphx_glr_download_examples_load-surface.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: load-surface.py <load-surface.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: load-surface.ipynb <load-surface.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
