.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_forge-project.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_forge-project.py:


FORGE Project
-------------

Load an example OMF archive of a geothermal research site.


Data from `FORGE geothermal research Site <https://utahforge.com/>`_



.. code-block:: default

    import pyvista as pv
    import omfvista

    # Download the data and load!
    project = omfvista.download_forge_example()
    project






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading FORGE data... Please be patient.
    FORGE Data Downloaded!


.. only:: builder_html

    .. raw:: html

        <table><tr><th>Information</th><th>Blocks</th></tr><tr><td>
        <table>
        <tr><th>MultiBlock</th><th>Values</th></tr>
        <tr><td>N Blocks</td><td>7</td></tr>
        <tr><td>X Bounds</td><td>329924.988, 344152.930</td></tr>
        <tr><td>Y Bounds</td><td>4252833.482, 4270951.098</td></tr>
        <tr><td>Z Bounds</td><td>-2606.000, 2906.000</td></tr>
        </table>

        </td><td>
        <table>
        <tr><th>Index</th><th>Name</th><th>Type</th></tr>
        <tr><th>0</th><th>Terrain</th><th>UnstructuredGrid</th></tr>
        <tr><th>1</th><th>Opal Mound Fault</th><th>UnstructuredGrid</th></tr>
        <tr><th>2</th><th>Negro Mag Fault</th><th>UnstructuredGrid</th></tr>
        <tr><th>3</th><th>Top of Basement</th><th>UnstructuredGrid</th></tr>
        <tr><th>4</th><th>Site Boundary</th><th>PolyData</th></tr>
        <tr><th>5</th><th>Observed Temperature</th><th>PolyData</th></tr>
        <tr><th>6</th><th>Observed Gravity</th><th>PolyData</th></tr>
        </table>

        </td></tr> </table>
        <br />
        <br />

Now we can go ahead and create an integrated visualization of all of the
data available to in the ``project`` :class:`pyvista.MultiBlock` container.
All we have to do is index the ``project`` container by the name of the
dataset that we want to acess. We can then pass those meshes to the
:class:`pyvista.Plotter`'s ``add_mesh`` method with keyword arguments for how
we want it displayed (e.g. color, opacity, etc.).


.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(project["Site Boundary"], line_width=5,
               color="yellow", render_lines_as_tubes=True)
    p.add_mesh(project["Terrain"],
               texture="geo_aer", opacity=0.7, lighting=False)
    p.add_mesh(project["Opal Mound Fault"],
               color="brown", opacity=0.7)
    p.add_mesh(project["Negro Mag Fault"],
               color="lightblue", opacity=0.7)
    p.add_mesh(project["Observed Temperature"],
               cmap="coolwarm", clim=[10,270], point_size=10,
               render_points_as_spheres=True)

    p.enable_anti_aliasing()
    p.enable_depth_peeling()
    p.camera_position = [(315661.9406719345, 4234675.528454831, 15167.291249498076),
                         (337498.00521202036, 4260818.504034578, -1261.5688408692681),
                         (0.2708862567924439, 0.3397398234107863, 0.9006650255615491)]
    p.show()





.. image:: /examples/images/sphx_glr_forge-project_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(315661.9406719345, 4234675.528454831, 15167.291249498076),
     (337498.00521202036, 4260818.504034578, -1261.5688408692681),
     (0.2708862567924439, 0.3397398234107863, 0.9006650255615491)]




.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(project["Site Boundary"], line_width=5,
               color="yellow", render_lines_as_tubes=True)
    p.add_mesh(project["Terrain"],
               texture="geo_aer", opacity=0.7, lighting=False)
    p.add_mesh(project["Opal Mound Fault"],
               color="brown", opacity=0.7)
    p.add_mesh(project["Negro Mag Fault"],
               color="lightblue", opacity=0.7)
    p.add_mesh(project["Observed Gravity"],
               render_points_as_spheres=True)

    p.enable_anti_aliasing()
    p.enable_depth_peeling()
    p.camera_position = [(315661.9406719345, 4234675.528454831, 15167.291249498076),
                         (337498.00521202036, 4260818.504034578, -1261.5688408692681),
                         (0.2708862567924439, 0.3397398234107863, 0.9006650255615491)]
    p.show()



.. image:: /examples/images/sphx_glr_forge-project_002.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(315661.9406719345, 4234675.528454831, 15167.291249498076),
     (337498.00521202036, 4260818.504034578, -1261.5688408692681),
     (0.2708862567924439, 0.3397398234107863, 0.9006650255615491)]




.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(project["Site Boundary"], line_width=5,
               color="yellow", render_lines_as_tubes=True)
    p.add_mesh(project["Terrain"],
               color=True, opacity=0.7, lighting=False)
    p.add_mesh(project["Opal Mound Fault"],
               color="brown", opacity=0.7)
    p.add_mesh(project["Negro Mag Fault"],
               color="lightblue", opacity=0.7)
    p.add_mesh(project["Top of Basement"])

    p.enable_anti_aliasing()
    p.enable_depth_peeling()
    p.camera_position = [(315661.9406719345, 4234675.528454831, 15167.291249498076),
                         (337498.00521202036, 4260818.504034578, -1261.5688408692681),
                         (0.2708862567924439, 0.3397398234107863, 0.9006650255615491)]
    p.show()



.. image:: /examples/images/sphx_glr_forge-project_003.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(315661.9406719345, 4234675.528454831, 15167.291249498076),
     (337498.00521202036, 4260818.504034578, -1261.5688408692681),
     (0.2708862567924439, 0.3397398234107863, 0.9006650255615491)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  13.459 seconds)


.. _sphx_glr_download_examples_forge-project.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: forge-project.py <forge-project.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: forge-project.ipynb <forge-project.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
